<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="incidents_meaning">
    <title>Нормализация событий</title>
    <body>
        <p>Выходным форматом сообщений <term keyref="appliance"/>а — внутренних или поступающих от
            источников событий — являются нормализованные события, которые отображаются на странице
                <cite keyref="events_fp"/>.</p>
        <p>Поля нормализованных событий и их значения используются в правилах корреляции событий, на
            основе которых <term keyref="appliance"/> обнаруживает инциденты.</p>
        <p>События приводятся к нормализованному виду по встроенным в <term keyref="appliance"/>
            правилам нормализации с использованием следующих полей (часть полей может отсутствовать
            в зависимости от типа получаемых сообщений): <codeph>@timestamp</codeph>,
                <codeph>@version</codeph>, <codeph>action</codeph>,
                <codeph>appliance_node_id</codeph>, <codeph>category</codeph>,
                <codeph>config_diff</codeph>, <codeph>config_type</codeph>,
                <codeph>create_time</codeph>, <codeph>description</codeph>,
                <codeph>event_code</codeph>, <codeph>event_type</codeph>,
                <codeph>observer_id</codeph>, <codeph>observer_name</codeph>, <codeph>id</codeph>,
                <codeph>justification</codeph>, <codeph>login</codeph>, <codeph>message</codeph>,
                <codeph>protocol</codeph>, <codeph>protocol_specific_data</codeph>,
                <codeph>receive_time</codeph>, <codeph>shell</codeph>, <codeph>source_ip</codeph>,
                <codeph>source_mac</codeph>, <codeph>status</codeph>, <codeph>target_ip</codeph>,
                <codeph>target_mac</codeph>, <codeph>type</codeph>, <codeph>user</codeph>. Данные
            поля определены во встроенном шаблоне формата <codeph>*.json</codeph>, который хранится
            в директории <codeph>/logstash/config/plugins/templates</codeph> рабочей директории
                <term keyref="appliance"/>а.</p>
        <p><term keyref="normalizing"/> также осуществляется с помощью встроенных и пользовательских
            конфигурационных файлов Logstash. Файлы хранятся с расширением <codeph>*.conf</codeph> в
            директории <codeph>/logstash/config/plugins/pipeline</codeph> рабочей директории <term
                keyref="appliance"/>а.</p>
        <p>Конфигурационные файлы нормализации делятся на три типа:</p>
        <ul id="ul_y4v_nx3_gyb">
            <li><codeph>input</codeph> — генерируют события на основании сообщений из различных
                сервисов и определяют, к какому типу событий оно относится. Могут также содержать
                фильтры для начальной нормализации;</li>
            <li><codeph>filter</codeph> — в зависимости от типа события выполняют основную
                нормализацию с помощью фильтров формата grok;</li>
            <li><codeph>output</codeph> — в зависимости от типа нормализованных событий отправляют
                их в соответствующий сервис или в дополнительный <codeph>output</codeph>.</li>
        </ul>
        <p>Рекомендуемый формат именования конфигурационных файлов нормализации: <codeph
                conref="../../../reusable/code_examples/grok_example_2.dita#ReusableComponent_b53_ww4_lrb/codeph_g53_ww4_lrb"
            />, где:</p>
        <ul id="ul_wk4_kv3_gyb">
            <li><codeph
                    conref="../../../reusable/code_examples/grok_example_3.dita#ReusableComponent_hr1_xw4_lrb/codeph_lr1_xw4_lrb"
                /> — приоритет применения файла (чем меньше число, тем выше приоритет);</li>
            <li><codeph
                    conref="../../../reusable/code_examples/grok_example_4.dita#ReusableComponent_o5r_xw4_lrb/codeph_u5r_xw4_lrb"
                /> — название конфигурации (рекомендуется указывать название сервиса, откуда
                получено сообщение или для какого сервиса предназначено готовое событие);</li>
            <li><codeph
                    conref="../../../reusable/code_examples/grok_example_5.dita#ReusableComponent_l5j_yw4_lrb/codeph_q5j_yw4_lrb"
                /> — тип конфигурации (<codeph>input</codeph>, <codeph>filter</codeph> или
                    <codeph>output</codeph>). При этом порядок применения <codeph
                    conref="../../../reusable/code_examples/grok_example_3.dita#ReusableComponent_hr1_xw4_lrb/codeph_lr1_xw4_lrb"
                /> должен строго соответствовать типу конфигурации: в <term keyref="appliance"/>е
                сначала выполняются все файлы <codeph>input</codeph>, затем — все
                    <codeph>filter</codeph>, в конце — все <codeph>output</codeph>.</li>
        </ul>
        <p>Grok-фильтры имеют следующий формат: <codeph
                conref="../../../reusable/code_examples/grok_example_6.dita#ReusableComponent_dqw_nrp_lrb/codeph_iqw_nrp_lrb"
            />.</p>
        <example id="example_b54_d53_gyb">
            <p>Пример grok-фильтра:</p>
            <codeblock conref="../../../reusable/code_examples/grok_example.dita#ReusableComponent_hz1_5w4_lrb/codeblock_mz1_5w4_lrb" id="codeblock_ycy_d53_gyb"/>
        </example>
        <p>Grok-фильтры могут применяться для разделения информации из встроенного поля по
            дополнительным пользовательским полям.</p>
        <example id="example_tk1_153_gyb">
            <p>Пример конфигурационного файла с фильтром grok для сообщений из журнала SCADA:</p>
            <codeblock conref="../../../reusable/code_examples/grok_example_1.dita#ReusableComponent_xdf_vw4_lrb/codeblock_d2f_vw4_lrb" id="codeblock_ibg_zt3_gyb"/>
            <p>Сообщение из журнала SCADA, отправленное в <term keyref="appliance"/>, сначала
                целиком записывается во встроенное поле <codeph>message</codeph>. Затем при помощи
                grok-фильтра содержимое этого поля нормализуется по следующим пользовательским
                полям: <codeph>SCADA_type</codeph>,<codeph> SCADA_message</codeph>,
                    <codeph>SCADA_result</codeph>, <codeph>SCADA_source</codeph>.</p>
        </example>
    </body>
</topic>
