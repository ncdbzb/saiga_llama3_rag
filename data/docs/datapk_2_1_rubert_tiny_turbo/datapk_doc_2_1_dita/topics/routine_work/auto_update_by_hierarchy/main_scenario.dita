<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="main_scenario">
 <title>Обновление Комплексов</title>
 <taskbody>
 <context>
 <p>Основной сценарий обновления выполняется на <term keyref="appliance"/>е верхнего уровня. Для
        обновления:</p>
 </context>
 <steps>
 <step>
        <cmd>Перейдите в директорию <codeph
            conref="../../reusable/filepath/opt_updater.dita#opt_updater/opt_updater"/>.</cmd>
        <info>
          <codeblock id="codeblock_hrn_trv_nvb">cd <codeph conref="../../reusable/filepath/opt_updater.dita#opt_updater/opt_updater"/></codeblock>
        </info>
      </step>
 <step>
        <cmd>Сгенерируйте конфигурационный файл</cmd>
        <info>
          <codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1] --rm updater_cli -ip [IP-адрес <term keyref="appliance"/>а верхнего уровня] get_hierarchy</codeblock>
          <note type="warning">Для выполнения команд обновления <term keyref="appliance"/>а
            используйте значение ключа API_VERSION, равное текущей версии API. Команда для <term
              keyref="appliance"/>а версии <ph conref="../../reusable/version.dita#version/version"
            />.x.x с IP-адресом 192.168.1.10:
            <codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip 192.168.1.10 get_hierarchy</codeblock></note>
        </info>
      </step>
 <step>
    <cmd>В процессе выполнения команды введите логин и пароль от учетной записи пользователя <term
      keyref="appliance"/>а с ролью, позволяющей делать API-запросы к сервису box_manager (с
     назначенной пользовательской ролью «Администратор» или служебной ролью «Разработчик»).</cmd>
    <info>
     <note>Информация об иерархии будет выгружена в файл
              <codeph>/opt/updater/cli_configr/conf.ini</codeph>. Файл по умолчанию делится на
            секции: <codeph>lvl1</codeph> – верхний уровень, <codeph>lvl2</codeph> – средний
            уровень, <codeph>lvl3</codeph> – базовый уровень. В каждой секции будут указаны
            соответствующие идентификаторы (UUID) <term keyref="appliance"/>ов в иерархии. При
            необходимости исключения из процесса обновления отдельных <term keyref="appliance"/>ов
            строки с UUID можно закомментировать с помощью символа «#» в начале строки. Также можно
            вручную добавлять строки с UUID в конфигурационный файл. Символ <codeph>//</codeph>
            позволяет оставлять комментарии в конце строки. При генерации конфигурационного файла
            автоматически в качестве комментария записывается сетевое имя и текущая версия <term
              keyref="appliance"/>а. Пример конфигурационного файла <codeph>conf.ini</codeph>:
            <codeblock>[lvl1]
6f9e8f46-b6f6-4dd8-907b-1f4570c8c2ae //datapk-vm-develop-1-10 <ph conref="../../reusable/version.dita#version/version"/>.0.0
[lvl2]
868c24eb-b9f6-447a-ada0-262525b1a61d //Тут можно написать свой комментарий
#это закомментированная строка
[lvl3]
fd85e6a9-183d-4183-a4a2-1451f3cb5126 //datapk-vm-develop-30-96 <ph conref="../../reusable/version.dita#version/version"/>.0.0</codeblock></note>
     <note type="attention">Не рекомендуется выполнять одновременное обновление на большом
      количестве <term keyref="appliance"/>ов. При необходимости можно добавлять дополнительные
      секции в конфигурационный файл для разделения <term keyref="appliance"/>ов одного уровня по
      новым секциям (для секций рекомендуется указывать названия, отражающие расположение <term
       keyref="appliance"/>а в глобальной секции и в иерархии в целом, например:
       <codeph>ks-1-lvl2</codeph>, <codeph>ks1-lvl3</codeph>). Тогда при выполнении обновления во
      всех командах необходимо указывать названия новых секций.</note>
    </info>
   </step>
 <step>
 <cmd>Выполните следующую команду для получения таблицы
 маршрутизации (информации о пути передачи данных до всех <term keyref="appliance"/>ов среднего
 и базового уровней):</cmd>
 <info>
 <codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip [IP-адрес_<term keyref="appliance"/>а_верхнего_уровня] routing_table</codeblock>
 </info>
 <info><note type="warning"> Указанную команду необходимо выполнять каждый раз, когда какой-либо из
            обновляемых <term keyref="appliance"/>ов или клон сервиса обновления
              перезапускается.<p>При расхождении версий сервиса обновлений необходимо устранить
              несоответствия и установить на всех <term keyref="appliance"/>ах новую версию (1.2.1),
              либо исключить из автоматического обновления <term keyref="appliance"/> со старой
              версией сервиса (закомментировать их в конфигурационном файле).</p></note>
 <note type="tip">Если какие-то из <term keyref="appliance"/>ов будут недоступны, будет предложено
            внести изменения в конфигурационный файл автоматически или сделать это вручную.</note></info>
 <stepresult>пример корректного вывода команды:
 <codeblock>Таблицы маршрутизации в иерархии были обновлены. Список uuid всех доступных datapk в иерархии:
['33db8738-fbd6-4dee-a0f4-efaeab7a9b5e', '38fbfb63-6a56-4eac-84a5-0289b2b18a34', '26c26e19-c34e-4c32-91e0-a269e9c5690d', '8750f2c1-f82f-4016-857f-fe9f3a0f2545']</codeblock></stepresult></step>
 <step><cmd>Проверьте для каждой секции доступность всех <term keyref="appliance"/>ов при помощи команды:</cmd>
 <info><codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip [IP-адрес <term keyref="appliance"/>а верхнего уровня] ping -s [имя_секции]</codeblock></info>
 <stepxmp>Пример команды на <term keyref="appliance"/>е c IP-адресом <codeph>192.168.1.10</codeph>
          для секции
          lvl2:<codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip 192.168.244.37 ping -s lvl2</codeblock></stepxmp>
 <info>
 <note type="tip">При необходимости более подробного вывода (docker ps) добавьте ключ
              <codeph>-v</codeph> в предлагаемую
            команду:<codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip [IP-адрес главного <term keyref="appliance"/>а] ping -s lvl2 -v</codeblock></note>
 </info>
 <stepresult><p>при успешном выполнении команды появятся статусы доступности опрашиваемых <term
            keyref="appliance"/>ов в формате <codeph>[Идентификатор <term keyref="appliance"/>а] |
            [Статус]</codeph> для проверенных и доступных <term keyref="appliance"/>ов в указанной
          секции. Пример: <codeph>f37b0f20-c1f5-4401-9240-0cfccd9daa58 OK</codeph>, где
            <codeph>f37b0f20-c1f5-4401-9240-0cfccd9daa58</codeph> — идентификатор (box_id) <term
            keyref="appliance"/>а, а <codeph>OK</codeph> — статус (доступен).</p>
			<note type="tip">Если
            некоторые <term keyref="appliance"/>ы из списка будут недоступны и нет возможности
            установить с ними соединение, удалите или закомментируйте строки с их идентификаторами в
            файле conf.ini.</note><note type="attention">Сервис обновлений поддерживает проверку
            соединения для порта <codeph>25500/tcp</codeph> нижестоящего <term keyref="appliance"
            />а. При проверке же вышестоящего <term keyref="appliance"/>а по этому порту, будет
            получена ошибка.</note></stepresult></step>
 <step>
 <cmd>Отправьте обновленный файл <codeph>docker-compose.release.yml</codeph> на все <term keyref="appliance"/>ы из каждой
 секции (в том числе и на верхний уровень <codeph>lvl1</codeph>).</cmd>
 <info>
          <note type="tip">Распаковка архива с образами новой версии рассмотрены в п.3 раздела
              «<xref href="superior_datapk_steps.dita"/>».</note>Для отправки воспользуйтесь
          командой: <codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip [IP-адрес_<term keyref="appliance"/>а верхнего_уровня] send -f {путь к docker-compose.release.yml, относительно <codeph conref="../../reusable/filepath/opt_updater.dita#opt_updater/opt_updater"/>/new_compose] -s [имя_секции]</codeblock>
          <note type="tip"> Путь к файлу необходимо вводить без указания текущей директории <codeph
              conref="../../reusable/filepath/opt_updater.dita#opt_updater/opt_updater"
              /><codeph>/new_compose</codeph>.</note>
        </info>
 <stepxmp>Пример отправки файла <codeph
            conref="../../reusable/filepath/opt_updater.dita#opt_updater/opt_updater"
            /><codeph>/new_compose/Mid/docker-compose.release.yml</codeph> на <term
            keyref="appliance"/> c IP-адресом <codeph>192.168.1.10</codeph>, который находится в
          секции
          <codeph>lvl2</codeph>:<codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip 192.168.1.10 send -f Mid/docker-compose.release.yml -s lvl2</codeblock></stepxmp>
 <stepresult>в результате выполнения команды будет выведено сообщение с результатом.
 Пример сообщения об успешной передаче файла:
 <codeblock>Успешно обновлены файлы конфигурации на 38fbfb63-6a56-4eac-84a5-0289b2b18a34</codeblock><note>При
 получении сообщения «Файла <codeph>[путь и имя файла]</codeph> не существует!» убедитесь в
 наличии файла и корректности пути к нему.</note></stepresult>
 </step>
 <step>
 <cmd>Отправьте на все <term keyref="appliance"/>ы из каждой секции образы новой версии. Отправку
 необходимо выполнять по секциям в порядке «от главного»: <codeph>lvl1</codeph>, <codeph>lvl2</codeph>, <codeph>lvl3</codeph> при
 помощи команды:</cmd>
 <info>
 <codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip [IP-адрес_<term keyref="appliance"/>а верхнего_уровня] pull -s [имя_секции]</codeblock>
 <note type="warning"> До завершения отправки образов на вышестоящую секцию,
 отправка на нижестоящую секцию невозможна. При попытке сервис обновления
 выведет соответствующее
 сообщение:<codeblock>Вы пытаетесь обновить образы на 22651d09-3c92-42f3-3235-91218415596, но образы на вышестоящем 22651d09-3c92-42f3-5147-736702472786 еще не были обновлены.</codeblock></note>
 </info>
 <stepxmp>Пример выполнения команды на вышестоящем <term keyref="appliance"/>е c IP-адресом
            <codeph>192.168.1.100</codeph>, который находится в секции
          <codeph>lvl1</codeph>:<codeblock>docker-compose -f docker-compose.release.yml -f docker-compose.updater_cli.yml run -e API_VERSION=v1 --rm updater_cli -ip 192.168.1.100 pull -s lvl1</codeblock></stepxmp>
        <stepresult>обновления будут отправлены. Процесс займет продолжительное время.</stepresult>
 </step>
 <step>
        <cmd>Дождитесь окончания всех операций передачи образов и получения ответов на <term
            keyref="appliance"/>е верхнего уровня.</cmd>
        <info>
          <note>Отсутствие стабильного соединения не влияет на процесс обновления. Если возможность
            получения ответа от <term keyref="appliance"/>а была прервана, повторно запустите
            команду для получения ответа о результатах отправки.</note>
        </info>
        <stepresult>сообщение при успешном выполнении передачи образов:
          <codeblock>Образы на 33db8738-fbd6-4dee-a0f4-efaeab7a9b5e обновлены</codeblock></stepresult>
      </step>
 <step><cmd>Для просмотра хода операций на <term keyref="appliance"/>е удаленно подключитесь к нему по SSH и выполните команду:</cmd>
 <info><codeblock>docker logs -f updater</codeblock></info>
 </step>
 </steps>
 </taskbody>
</task>
