<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="id_22">
     <title>Измерение
скорости
сетевого
трафика на
прослушиваемом
интерфейсе</title>
     <taskbody>
       <steps>
      <step>
        <cmd>Добавьте в шаблон событий <codeph>datapk-event.json</codeph> числовые поля
            <codeph>rx</codeph> и <codeph>speed</codeph>. Для этого: </cmd>
        <substeps id="substeps_yht_qcf_ytb">
          <substep>
            <cmd>Перейдите в директорию <codeph
   conref="../../../../reusable/filepath/opt_datapk_logstash.dita#ReusableComponent_mn1_l1z_mtb/codeph_pn1_l1z_mtb"
   /><codeph>/config/plugins/templates</codeph>. </cmd>
          </substep>
          <substep>
            <cmd>Откройте файл <codeph>datapk-event.json</codeph> в режиме редактирования. </cmd>
          </substep>
          <substep>
            <cmd>Добавьте в шаблон числовые поля <codeph>rx</codeph> и <codeph>speed</codeph> с типом
 <codeph>double</codeph> (<xref href="#id_22/fig_zxw_lvr_xtb"/>).</cmd>
            <info>
 <fig id="fig_zxw_lvr_xtb">
   <title>Пример описания числовых полей в шаблоне</title>
   <image href="../../../../../images/checkup/img(3).png" id="image_cyw_lvr_xtb"/>
 </fig>
            </info>
          </substep>
        </substeps>
      </step>
      
      <step>
        <cmd>Создайте файл <codeph>78-int-speed-filter.conf</codeph>. Для этого:</cmd>
        <info>
          <note id="note_lsp_fcf_ytb">Файл используется для нормализации событий.</note>
        </info>
        <substeps id="substeps_jhg_fcf_ytb">
          <substep>
            <cmd>Перейдите в директорию
   <codeph>/opt/datapk/logstash/config/plugins/pipeline</codeph>.</cmd>
          </substep>
          <substep>
            <cmd>Создайте файл <codeph>78-int-speed-filter.conf</codeph> и откройте его в режиме
 редактирования.</cmd>
          </substep>
          <substep>
            <cmd>Наполните его следующим содержанием:</cmd>
            <info>
 <codeblock id="codeblock_fyc_lcf_ytb" outputclass="language-bourne">filter {
if [type] == "event" and [source] == "EXPL_CONTROL" and [event_type] != "interface_speed" 
          {
            grok {
  id => "88-speed-filter grok speed"
  match => { "[message]" => "^Эксплуатационный мониторинг DATAPK: Скорость трафика на слушающем интерфейсе %{NUMBER:speed} Кбит/с, Количество полученных пакетов: %{NUMBER:rx} Мбайт" }
  add_field => { "event_type" => "interface_speed" }
  tag_on_failure => []
     }
          }
       }</codeblock>
            </info>
          </substep>
        </substeps>
      </step>
      <step>
        <cmd>Создайте скрипт <codeph>speed.sh</codeph>. Для этого:</cmd>
        <info>
          <note id="note_bb5_vbf_ytb">Скрипт используется для генерации событий эксплуатационного
            мониторинга в части измерения скорости сетевого трафика на прослушиваемом
            интерфейсе.</note>
        </info>
        <substeps id="substeps_eyn_sbf_ytb">
          <substep>
            <cmd>Перейдите в директорию <codeph>/opt/datapk</codeph>. </cmd>
          </substep>
          <substep>
            <cmd>Создайте файл <codeph>speed.sh</codeph>. </cmd>
          </substep>
          <substep>
            <cmd>Наполните его следующими данными:</cmd>
            <info>
 <codeblock id="codeblock_rs3_vbf_ytb" outputclass="language-bourne">#!/bin/bash


DELTA=300
IFNAME=enp2s0

TEMPFILE=/tmp/speedfile

if ! [ -f $TEMPFILE ]
   then touch $TEMPFILE
fi

bytesprev=`awk 'NF>1{print $NF}' $TEMPFILE`

curl -s -i -X GET http://127.0.0.1:9100/metrics | grep "node_network_receive_bytes_total{device=\"$IFNAME\"}" > $TEMPFILE

[ -z "$bytesprev" ] &amp;&amp; bytesprev=`awk 'NF>1{print $NF}' $TEMPFILE`

bytescurr=`awk 'NF>1{print $NF}' $TEMPFILE`

speed=`echo "$bytescurr $bytesprev $DELTA" | awk '{print ($1 - $2) * 8 / $3 / 1024}'`

speedmod=`LC_ALL=C printf  "%f" $speed`

dt=$(date -u '+%Y-%m-%dT%H:%M:%S.%3NZ')

rx=`echo "$bytescurr" | awk '{print $1 / 1024 / 1024}'`

curl -s -d "[{\"create_time\": \"$dt\", \"source\": \"datapk_sensor\",\"hostname\": \"$HOSTNAME\",\"msg_data\": \"Эксплуатационный мониторинг DATAPK: Скорость трафика на слушающем интерфейсе $speedmod Кбит/с, Количество полученных пакетов: $rx Мбайт\"}]" --header 'Content-Type: application/json' --header 'Accept: application/octet-stream' -X POST http://172.10.0.1:15000/datapk_events</codeblock>
            </info>
            <info>
 <note id="note_itr_zbf_ytb">Данный скрипт обращается к сервису
     <codeph>node_exporter</codeph>, получает количество принятых байт сетевого
   интерфейса, вычисляет среднюю скорость (в Кбит/с) за данный интервал времени и
   передает ее в интерфейс событий Комплекса по внутреннему API.</note>
            </info>
          </substep>
        </substeps>
      </step>
         <step>
        <cmd>Установите периодический запуск скрипта (cron). Для этого:</cmd>
        <substeps>
          <substep>
            <cmd>выполните команду <codeph>crontab -e</codeph>;</cmd>
          </substep>
          <substep>
            <cmd>введите значение <codeph>i</codeph> (переход в режим редактирования);</cmd>
          </substep>
          <substep>
            <cmd>добавьте строку вида <codeph>*/5 * * * * /bin/bash /opt/datapk/speed.sh</codeph>
              (для запуска раз в 5 минут);</cmd>
          </substep>
          <substep>
            <cmd>введите значение <codeph>Esc</codeph> (выход из режима редактирования);</cmd>
          </substep>
          <substep>
            <cmd>введите значение <codeph>:wq</codeph> (выход с сохранением изменений).</cmd>
          </substep>
        </substeps>
      </step>
       </steps>
      </taskbody>
    </task>
